audioAutoplay=The autoplay attribute is a boolean attribute.\nWhen present, the audio will automatically start playing as soon as it can do so without stopping
audioControls=The controls attribute is a boolean attribute.\nWhen present, it specifies that audio controls should be displayed.\nAudio controls should include:\n - Play\n - Pause\n - Seeking\n - Volume
audioLoop=The loop attribute is a boolean attribute.\nWhen present, it specifies that the audio will start over again, every time it is finished
audioMuted=The muted attribute is a boolean attribute.\nWhen present, it specifies that the audio output should be muted
audioPreload=The preload attribute specifies if and how the author thinks that the audio file should be loaded when the page loads
audioSrc=The src attribute specifies the URL of the audio file to play
audioType=The type attribute specifies the MIME type of the audio resource
audioPreloadAuto=The author thinks that the browser should load the entire audio file when the page loads
audioPreloadMetadata=The author thinks that the browser should load only metadata when the page loads
audioPreloadNone=The author thinks that the browser should NOT load the audio file when the page loads

buttonIcon=
buttonIconOnly=

checkboxesLegend=
checkboxIsSelected=

collapsibleCollapsed=The data-collapsed attribute is a boolean attribute (true/false).\nTo expand the content when the page loads, set it to false.\nDefault value is true
collapsibleCollapsedIcon=Attribute data-collapsed-icon overrides default icon displayed at header when content is collapsed
collapsibleContentTheme=To provide a stronger visual connection between the collapsible header and content, add the data-content-theme attribute to the wrapper and specify a theme swatch letter. This applies the swatch's border and flat background color (not the gradient) to the content block, removes the rounded corners from the bottom of the header, and gives the bottom of the content block rounded corners to visually group these elements
collapsibleExpandedIcon=Attribute data-expanded-icon overrides default icon displayed at header when content is expanded
collapsibleFieldSet=For forms, use a fieldset and legend for the collapsible.\nOtherwise, use div and h1-h6
collapsibleHeader=Text placed inside any header (H1-H6) or legend element that goes directly inside the container. The framework will style the header to look like a clickable button and add a "+" icon to the left to indicate it's expandable
collapsibleInset=By default collapsibles have an inset appearance. To make them full width without corner styling add the data-inset="false" attribute to the element

dialogCloseButton=
dialogTitle=

elementId=

footerArrangement=
footerFixedPosition=When attribute data-position is set to 'fixed', the footer doesn't scroll out of view
footerFullScreen=The data-fullscreen attribute is a boolean attribute (true/false).\nWhen set to true, footer toolbar appears and disappears when the page is clicked.\nDefault value is false 
footerTitle=

formAction=The action attribute specifies where to send the form-data when a form is submitted.\nIn HTML5, the action attribute is no longer required
formAutocomplete=The autocomplete attribute specifies whether a form should have autocomplete on or off.\nWhen autocomplete is on, the browser automatically complete values based on values that the user has entered before
formMethod=The method attribute specifies how to send form-data (the form-data is sent to the page specified in the action attribute).\n Values:\n - get - Default. Appends the form-data to the URL in name/value pairs: URL?name=value&name=value\n - post - Sends the form-data as an HTTP post transaction
formName=The name attribute is used to reference elements in a JavaScript, or to reference form data after a form is submitted
formValidate=The novalidate attribute is a boolean attribute.\nWhen present, it specifies that the form-data (input) should not be validated when submitted

gridColumns=
gridRows=

headerFixedPosition=When attribute data-position is set to 'fixed', the header doesn't scroll out of view
headerFullScreen=The data-fullscreen attribute is a boolean attribute (true/false).\nWhen set to true, header toolbar appears and disappears when the page is clicked.\nDefault value is false 
headerLeftButton=
headerRightButton=
headerTitle=

hideLabel=

href=

imageAlt=The required alt attribute specifies an alternate text for an image, if the image cannot be displayed
imageCrossorigin=Allow images from third-party sites that allow cross-origin access to be used with canvas
imageHeight=The height attribute specifies the height of an image, in pixels
imageIsmap=The ismap attribute is a boolean attribute.\nWhen present, it specifies that the image is part of a server-side image-map (an image-map is an image with clickable areas)
imageSrc=The required src attribute specifies the URL of the image
imageUsemap=The usemap attribute specifies an image as a client-side image-map (an image-map is an image with clickable areas).\nThe value is a hash character ("#") plus the name or id of the <map> element to use 
imageWidth=The width attribute specifies the width of an image, in pixels

iconPosition=

labelText=Text value of the label element
labelFor=The for attribute specifies which form element a label is bound to. The value is the id of that element
labelForm=The form attribute specifies one or more forms the <label> element belongs to. The value is a space-separated list of id's

linkAction=

listviewAutodividers=A listview can be configured to automatically generate dividers for its items by adding a data-autodividers="true" attribute to any listview
listviewDivider=List items can be turned into dividers to organize and group the list items. This is done by adding the data-role="list-divider" to any list item
listviewDividerTheme=
listviewInset=Adding the data-inset="true" attribute to the list, applies the inset appearance which is useful for mixing a listview with other content on a page
listviewNumbered=
listviewReadonly=
listviewSearchFilter=The data-filter attribute is a boolean attribute (true/false).\nWhen set to true, the framework appends a search box above the list and adds the behavior to filter out list items that don't contain the current search string as the user types

pageBackButton=
pageFooter=
pageHeader=

panelDismissable=The data-dismissible attribute is a boolean attribute (true/false).\nWhen set to false, it prevents closing the panel by clicking outside the panel onto the page contents.\nDefault value is true
panelDisplay=The data-display attribute is used to set the display mode of the panel.\nDefault value is reveal
panelDisplayOverlay=The panel will appear on top of the page contents
panelDisplayPush=Animates both the panel and page at the same time
panelDisplayReveal=The panel will sit under the page and reveal as the page slides away
panelFixedPosition=The data-position-fixed attribute is a boolean attribute (true/false).\nWhen set to true, the panel's content will appear no matter how far down the page you're scrolled.\nDefault value is false
panelPosition=The data-position attribute is used to set the position of the panel on the screen. The default value is left
panelPositionLeft=The panel will appear from the left edge of the screen
panelPositionRight=The panel will appear from the right edge of the screen
panelSwipeClose=The data-swipe-close attribute is a boolean attribute (true/false).\nWhen set to false, it turns off the swipe-to-close behavior.\nDefault value is true

popupCloseButton=Adds an explicit close button to a popup
popupDismissable=The data-dismissible attribute is a boolean attribute (true/false).\nWhen set to false, a modal style dialog is created to prevent the click-outside-to-close behavior so people need to interact with popup buttons to close it.\nDefault value is true
popupInfoStyled=Customizes the button to be convenient for using tooltips in text. 
popupOpenButton=Add a button that invokes the popup window.\nWithout the button, the popup window is not accessible in the wizard preview.
popupOverlay=The data-overlay-theme attribute controls the semi-opaque layer behind the popup
popupPadding=For popups with formatted text, padding is needed. The ui-content class can be added to the popup to add the standard 15px of padding. When padding is added, we apply a few style rules to negate the top margin for the first heading or paragraph in the popup and do the same for the last element's bottom margin
popupPositionTo=By default, popups open centered vertically and horizontally over the element you clicked (the origin) which is good for popups used as tooltips or menus. If a popup should appear centered within the window instead of over the origin, add the data-position-to attribute to the link and specify a value of window. It's also possible to specify any valid selector as the value of position-to in addition to origin and window
popupShadow=The data-shadow attribute is a boolean attribute (true/false).\nWhen it is true, a dark shadow-like fading spot is created around the popup window. For a popup with a transparent background set data-shadow="false" and set data-theme="none".\nDefault value is true
popupTransition=By default, popups have no transition to make them open as quickly as possible. To set the transition used for a popup, add the data-transition attribute to the link that references the popup. The reverse transition will be used when closing the popup. For performance reasons on mobile devices, we recommend using simpler transitions like pop, fade or none for smooth and fast popup animations

radioIsSelected=
radioLegend=

rangeSliderHighlight=
rangeSliderMax=
rangeSliderMin=
rangeSliderRightValue=
rangeSliderTrackTheme=
rangeSliderStep=
rangeSliderValue=

selectMenuSelected=

sliderIsRange=

tableColumnContent=
tableColumnName=
tableColumnPriority=
tableMode=
tableResponsive=
tableStripes=

textInputAutofocus=The autofocus attribute is a boolean attribute.\nWhen present, it specifies that an <input> element should automatically get focus when the page loads
textInputClear=The data-clear-btn attribute is a boolean attribute (true/false).\nWhen set to true and a value is entered, a button appears within text input area. Pushing that button removes the entered value
textInputMax=The max attribute specifies the maximum value for an <input> element
textInputMaxlength=The maxlength attribute specifies the maximum number of characters allowed in the <input> element
textInputMin=The min attribute specifies the minimum value for an <input> element
textInputPattern=The pattern attribute specifies a regular expression that the <input> element's value is checked against
textInputPlaceholder=The placeholder attribute specifies a short hint that describes the expected value of an input field (e.g. a sample value or a short description of the expected format). The short hint is displayed in the input field before the user enters a value
textInputRequired=The required attribute is a boolean attribute.\nWhen present, it specifies that an input field must be filled out before submitting the form
textInputStep=The step attribute specifies the legal number intervals for an <input> element
textInputType=The type attribute specifies the type of <input> element to display.\nThe default type is: text

toggleOffLabel=
toggleOnLabel=
toggleTrackTheme=

transition=The data-transition attribute is used to control animation when navigating to the next page, and opening dialogs and popups.\nPopups by default have no transition to make them open as quickly as possible. Dialogs by default open with a 'pop' transition

videoAutoplay=The autoplay attribute is a boolean attribute.\nWhen present, the video will automatically start playing as soon as it can do so without stopping
videoControls=The controls attribute is a boolean attribute.\nWhen present, it specifies that video controls should be displayed.\nVideo controls should include:\n - Play\n - Pause\n - Seeking\n - Volume\n - Fullscreen toggle\n - Captions/Subtitles (when available)\n - Track (when available)
videoHeight=The height attribute specifies the height of a video player, in pixels
videoLoop=The loop attribute is a boolean attribute.\nWhen present, it specifies that the video will start over again, every time it is finished
videoMuted=The muted attribute is a boolean attribute.\nWhen present, it specifies that the audio output of the video should be muted
videoPoster=The poster attribute specifies an image to be shown while the video is downloading, or until the user hits the play button. If this is not included, the first frame of the video will be used instead
videoPreload=The preload attribute specifies if and how the author thinks that the video should be loaded when the page loads
videoSrc=The src attribute specifies the URL of the video file to play
videoType=The type attribute specifies the MIME type of the video resource
videoWidth=The width attribute specifies the width of a video player, in pixels
videoPreloadAuto=The author thinks that the browser should load the entire video when the page loads
videoPreloadMetadata=The author thinks that the browser should load only metadata when the page loads
videoPreloadNone=The author thinks that the browser should NOT load the video when the page loads

widgetCorners=The data-corners attribute is a boolean attribute (true/false).\nIt controls the rounded corners of buttons, popups and menus.\nDefault value is true
widgetDisabled=
widgetInline=The data-inline attribute is a boolean attribute (true/false).\nWhen set to true, it styles the buttons/menu items to be the width of their content so they sit on the same line.\nDefault value is false
widgetLabel=
widgetLayout=
widgetMini=The data-mini attribute is a boolean attribute (true/false).\nWhen set to true, it creates a mini version of jQuery Mobile widgets.\nDefault value is false 
widgetTheme=
