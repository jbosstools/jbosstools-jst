# Attribute descriptions from AngularJS API docs - http://docs.angularjs.org/api/
AngularAttributeProvider_NgChange=Angular expression to be executed when input changes due to user interaction with the input element.
AngularAttributeProvider_NgMaxlength=Sets maxlength validation error key if the value is longer than maxlength.
AngularAttributeProvider_NgMinlength=Sets minlength validation error key if the value is shorter than minlength.
AngularAttributeProvider_NgModel=<b>ngModel</b> is a directive that tells Angular to do two-way data binding. It works together with <b>input</b>, <b>select</b>, <b>textarea</b> and even custom form controls that use NgModelController exposed by this directive.
AngularAttributeProvider_NgPattern=Sets pattern validation error key if the value does not match the RegExp pattern expression. Expected value is /regexp/ for inline patterns or regexp for patterns defined as scope expressions.
AngularAttributeProvider_NgRequired=Adds required attribute and required validation constraint to the element when the <b>ngRequired</b> expression evaluates to true. Use <b>ngRequired</b> instead of required when you want to data-bind to the required attribute.
NameAttributeProvider_Name=Name of the form. If specified, the form controller will be published into related scope, under this name.
NgAnyClassAttribute_NgBind=The <b>ngBind</b> directive tells Angular to replace the text content of the specified HTML element with the value of a given expression, and to update the text content when the value of that expression changes.
NgAnyClassAttribute_NgClass=The <b>ngClass</b> allows you to set CSS classes on HTML an element, dynamically, by databinding an expression that represents all classes to be added.
NgAnyClassAttribute_NgClassEven=The <b>ngClassOdd</b> and <b>ngClassEven</b> directives work exactly as <b>ngClass</b>, except it works in conjunction with <b>ngRepeat</b> and takes affect only on odd (even) rows.
NgAnyClassAttribute_NgClassOdd=The <b>ngClassOdd</b> and <b>ngClassEven</b> directives work exactly as <b>ngClass</b>, except it works in conjunction with <b>ngRepeat</b> and takes affect only on odd (even) rows.
NgAnyClassAttribute_NgCloak=The <b>ngCloak</b> directive is used to prevent the Angular html template from being briefly displayed by the browser in its raw (uncompiled) form while your application is loading. Use this directive to avoid the undesirable flicker effect caused by the html template display.
NgAnyClassAttribute_NgForm=Nestable alias of <b>form</b> directive. HTML does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a sub-group of controls needs to be determined.
NgAnyClassAttribute_NgInclude=Fetches, compiles and includes an external HTML fragment.
NgAnyClassAttribute_NgInit=The <b>ngInit</b> directive specifies initialization tasks to be executed before the template enters execution mode during bootstrap.
NgAnyClassAttribute_NgStyle=The <b>ngStyle</b> directive allows you to set CSS style on an HTML element conditionally.
NgAnyClassAttribute_NgTransclude=Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.
NgAnyInputAttributeProvider_NgChecked=The HTML specs do not require browsers to preserve the special attributes such as checked. (The presence of them means true and absence means false) This prevents the angular compiler from correctly retrieving the binding expression. To solve this problem, use the <b>ngChecked</b> directive.
NgAnyInputAttributeProvider_NgList=Optional delimiter that should be used to split the value. If specified in form /something/ then the value will be converted into a regular expression.
NgAppAttributeProvider_NgApp=Use this directive to auto-bootstrap an application. Only one ngApp directive can be used per HTML document. The directive designates the root of the application and is typically placed at the root of the page.
NgBlurAttributeProvider_NgBlur=Specify custom behavior on blur event.
NgBlurAttributeProvider_NgFocus=Specify custom behavior on focus event.
NgDisabledAttributeProvider_NgDisabled=The HTML specs do not require browsers to preserve the special attributes such as disabled. (The presence of them means true and absence means false) This prevents the angular compiler from correctly retrieving the binding expression. To solve this problem, use the ngDisabled directive.
NgImageAttributeProvider_NgSrc=Using Angular markup like {{hash}} in a src attribute doesn't work right: The browser will fetch from the URL with the literal text {{hash}} until Angular replaces the expression inside {{hash}}. The <b>ngSrc</b> directive solves this problem.
NgImageAttributeProvider_NgSrcset=Using Angular markup like {{hash}} in a srcset attribute doesn't work right: The browser will fetch from the URL with the literal text {{hash}} until Angular replaces the expression inside {{hash}}. The <b>ngSrcset</b> directive solves this problem.
NgInputCheckboxAttributeProvider_NgFalseValue=The value to which the expression should be set when not selected.
NgInputCheckboxAttributeProvider_NgTrueValue=The value to which the expression should be set when selected.
NgInputTextAttributeProvider_NgTrim=If set to false Angular will not automatically trimming the input.
NgLinkAttributeProvider_NgHref=Using Angular markup like {{hash}} in an <b>href</b> attribute makes the page open to a wrong URL, if the user clicks that link before angular has a chance to replace the {{hash}} with actual URL, the link will be broken and will most likely return a 404 error. The <b>ngHref</b> directive solves this problem.
NgModelAttributeProvider_NgReadOnly=The HTML specs do not require browsers to preserve the special attributes such as readonly. (The presence of them means true and absence means false) This prevents the angular compiler from correctly retrieving the binding expression. To solve this problem, use the <b>ngReadonly</b> directive.
NgPluralizeAttributeProvider_Count=The variable to be bounded to.
NgPluralizeAttributeProvider_NgPluralize=<b>ngPluralize</b> is a directive that displays messages according to en-US localization rules.
NgPluralizeAttributeProvider_Offset=Offset to deduct from the total number.
NgPluralizeAttributeProvider_When=The mapping between plural category to its corresponding strings.
NgSubmitAttributeProvider_NgSubmit=Enables binding angular expressions to onsubmit events.<br/><br/>Additionally it prevents the default action (which for form means sending the request to the server and reloading the current page) <b>but only if the form does not contain an action attribute</b>.
NgSwitchAttributeProvider_NgSwitch=The <b>ngSwitch</b> directive is used to conditionally swap DOM structure on your template based on a scope expression. Elements within <b>ngSwitch</b> but without <b>ngSwitchWhen</b> or <b>ngSwitchDefault</b> directives will be preserved at the location as specified in the template.
